# note: default heroku execution:
# $ java -Dserver.port=$PORT $JAVA_OPTS -jar target/{artifact}.jar

spring.profiles.active=production
server.port=${PORT:5000}

spring.thymeleaf.mode=HTML

# security
spring.security.user.name=${LOGIN_USERNAME:dev}
spring.security.user.password=${LOGIN_PASSWORD:dev}

# incoming traffic rate-limiting
# (see https://github.com/MarcGiffing/bucket4j-spring-boot-starter)
# (see https://devcenter.heroku.com/articles/preparing-a-spring-boot-app-for-production-on-heroku#rate-limit-api-calls)
#bucket4j.enabled=true
#bucket4j.filters[0].cache-name=buckets
#bucket4j.filters[0].url=.*
#bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=50
#bucket4j.filters[0].rate-limits[0].bandwidths[0].time=10
#bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=seconds
#spring.cache.jcache.config=classpath:ehcache.xml

# logging
# tip - uncommenting the following line can help troubleshoot Spring Boot issues
# debug=true
logging.level.org.springframework=INFO
 
